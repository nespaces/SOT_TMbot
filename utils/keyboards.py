from telegram import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup
from utils.constants import (
    GENDERS, ROLES, FACTIONS, SERVERS,
    SHIP_TYPES, PLATFORMS, SEARCH_TYPES, SEARCH_GOALS
)
import logging

logger = logging.getLogger(__name__)

def create_grid_keyboard(items, prefix, row_width=3):
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤ —Å–µ—Ç–∫–µ."""
    buttons = []
    row = []

    for item in items:
        callback_data = f"{prefix}_{item}"
        if len(callback_data.encode()) > 64:  # Telegram callback data limit
            logger.warning(f"Callback data too long: {callback_data}")
            continue

        row.append(InlineKeyboardButton(item, callback_data=callback_data))

        if len(row) == row_width:
            buttons.append(row)
            row = []

    if row:  # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –∫–Ω–æ–ø–∫–∏
        buttons.append(row)

    return InlineKeyboardMarkup(buttons)

def create_keyboard_from_list(items, row_width=3):
    """–°–æ–∑–¥–∞–Ω–∏–µ ReplyKeyboard –∏–∑ —Å–ø–∏—Å–∫–∞."""
    buttons = []
    row = []
    for item in items:
        row.append(item)
        if len(row) == row_width:
            buttons.append(row)
            row = []
    if row:
        buttons.append(row)
    return ReplyKeyboardMarkup(buttons, resize_keyboard=True, one_time_keyboard=True)

def create_search_type_keyboard():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –ø–æ–∏—Å–∫–∞."""
    buttons = []
    for type_, data in SEARCH_TYPES.items():
        button_text = str(data["name"]) if isinstance(data, dict) and "name" in data else str(type_)
        buttons.append(button_text)
    return create_keyboard_from_list(buttons)

def create_search_goal_keyboard():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ü–µ–ª–∏ –ø–æ–∏—Å–∫–∞."""
    return create_keyboard_from_list(SEARCH_GOALS)

def create_gender_keyboard():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞."""
    return create_keyboard_from_list(GENDERS)

def create_role_keyboard():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏."""
    return create_keyboard_from_list(ROLES)

def create_faction_keyboard():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ—Ä–∞–∫—Ü–∏–∏."""
    return create_keyboard_from_list(FACTIONS)

def create_server_keyboard():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–µ—Ä–≤–µ—Ä–∞."""
    return create_keyboard_from_list(SERVERS)

def create_ship_keyboard():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∫–æ—Ä–∞–±–ª—è."""
    return create_keyboard_from_list(SHIP_TYPES)

def create_platform_keyboard():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã."""
    return create_keyboard_from_list(PLATFORMS)

def create_moderation_keyboard(listing_id):
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏."""
    buttons = [[
        InlineKeyboardButton("‚úÖ –ü—Ä–∏–Ω—è—Ç—å", callback_data=f"mod_approve_{listing_id}"),
        InlineKeyboardButton("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"mod_decline_{listing_id}")
    ]]
    return InlineKeyboardMarkup(buttons)

def create_listing_management_keyboard(listing_id):
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏–µ–º."""
    buttons = [[
        InlineKeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data=f"refresh_{listing_id}"),
        InlineKeyboardButton("üóë –£–¥–∞–ª–∏—Ç—å", callback_data=f"delete_{listing_id}")
    ]]
    return InlineKeyboardMarkup(buttons)

def create_contact_type_keyboard():
    """Create contact type selection keyboard."""
    keyboard = [
        [
            InlineKeyboardButton("Telegram", callback_data="contact_telegram"),
            InlineKeyboardButton("Discord", callback_data="contact_discord"),
            InlineKeyboardButton("–ì–æ–ª–æ—Å–æ–≤–æ–π —á–∞—Ç", callback_data="contact_voice")
        ]
    ]
    return InlineKeyboardMarkup(keyboard)

def create_main_menu_keyboard():
    """Create main menu keyboard."""
    keyboard = [
        [
            "/create üìù –°–æ–∑–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ",
            "/manage üìã –ú–æ–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è",
            "/cancel ‚ùå –û—Ç–º–µ–Ω–∞"
        ]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)